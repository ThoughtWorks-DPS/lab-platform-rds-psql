# Orb 'feedyard/terraform@0.3.0' resolved to 'feedyard/terraform@0.3.0'
version: 2
jobs:
  sandbox-change-plan:
    docker:
    - image: twdps/di-circleci-infra-image:stable
    resource_class: medium
    environment:
    - TF_WORKSPACE: sandbox
    shell: secrethub run -- /bin/sh -eo pipefail
    steps:
    - checkout
    - setup_remote_docker
    - run:
        command: terraform fmt -check=false
        name: terraform cli validation
        working_directory: .
    # - run:
    #     command: docker run --rm -v $(pwd) -t wata727/tflint
    #     name: tflint
    #     working_directory: .
    - run:
        name: generate environmental configuration and credentials from templates
        command: |
          secrethub inject -i tpl/terraformrc.tpl -o ~/.terraformrc
          secrethub inject -i tpl/sandbox.auto.tfvars.json.tpl -o sandbox.auto.tfvars.json
    - run:
        command: "terraform version\nterraform init \n"
        name: terraform init
        working_directory: .
    - run:
        command: 'terraform plan '
        name: terraform plan
        working_directory: .
  sandbox-change-apply:
    docker:
    - image: twdps/di-circleci-infra-image:stable
    resource_class: medium
    environment:
    - TF_WORKSPACE: sandbox
    shell: secrethub run -- /bin/sh -eo pipefail
    steps:
    - checkout
    - setup_remote_docker
    - run:
        name: generate environmental configuration and credentials from templates
        command: |
          secrethub inject -i tpl/terraformrc.tpl -o ~/.terraformrc
          secrethub inject -i tpl/sandbox.auto.tfvars.json.tpl -o sandbox.auto.tfvars.json
    - run:
        command: 'terraform init '
        name: terraform init
        working_directory: .
    - run:
        command: terraform apply  --auto-approve
        name: terraform apply
        working_directory: .
    - run:
        name: test sandbox account changes
        environment:
          TEST_ENV: sandbox
        command: |
          terraform output -raw psql_secret | secrethub write twdps/di/svc/aurora/psql/password
          terraform output -raw psql_master_username | secrethub write twdps/di/svc/aurora/psql/username
          terraform output -raw psql_endpoint | secrethub write twdps/di/svc/aurora/psql/endpoint
  preview-change-plan:
    docker:
    - image: twdps/di-circleci-infra-image:stable
    resource_class: medium
    environment:
    - TF_WORKSPACE: sandbox
    shell: secrethub run -- /bin/sh -eo pipefail
    steps:
    - checkout
    - setup_remote_docker
    - run:
        command: terraform fmt -check=false
        name: terraform cli validation
        working_directory: .
    - run:
        command: docker run --rm -v $(pwd) -t wata727/tflint
        name: tflint
        working_directory: .
    - run:
        name: generate environmental configuration and credentials from templates
        command: |
          secrethub inject -i tpl/terraformrc.tpl -o ~/.terraformrc
          secrethub inject -i tpl/preview.auto.tfvars.json.tpl -o preview.auto.tfvars.json
    - run:
        command: "terraform version\nterraform init \n"
        name: terraform init
        working_directory: .
    - run:
        command: 'terraform plan '
        name: terraform plan
        working_directory: .
  preview-change-apply:
    docker:
    - image: twdps/di-circleci-infra-image:stable
    resource_class: medium
    environment:
    - TF_WORKSPACE: preview
    shell: secrethub run -- /bin/sh -eo pipefail
    steps:
    - checkout
    - setup_remote_docker
    - run:
        name: generate environmental configuration and credentials from templates
        command: |
          secrethub inject -i tpl/terraformrc.tpl -o ~/.terraformrc
          secrethub inject -i tpl/preview.auto.tfvars.json.tpl -o preview.auto.tfvars.json
    - run:
        command: 'terraform init '
        name: terraform init
        working_directory: .
    - run:
        command: terraform apply  --auto-approve
        name: terraform apply
        working_directory: .
    - run:
        name: test preview account changes
        environment:
          TEST_ENV: preview
        command: |
          secrethub run -- bash tpl/cluster_test.sh preview
          secrethub run -- bash tpl/write_cluster_credentials.sh preview
  sandbox lab rds teardown:
    docker:
    - image: twdps/di-circleci-infra-image:stable
    resource_class: medium
    environment:
    - TF_WORKSPACE: sandbox
    shell: secrethub run -- /bin/sh -eo pipefail
    steps:
    - checkout
    - setup_remote_docker
    - run:
        name: generate environmental configuration and credentials from templates
        command: |
          secrethub inject -i tpl/terraformrc.tpl -o ~/.terraformrc
          secrethub inject -i tpl/sandbox.auto.tfvars.json.tpl -o sandbox.auto.tfvars.json
    - run:
        command: 'terraform init '
        name: terraform init
        working_directory: .
    - run:
        command: terraform destroy  --auto-approve
        name: terraform destroy
        working_directory: .
  preview lab rds teardown:
    docker:
    - image: twdps/di-circleci-infra-image:stable
    resource_class: medium
    environment:
    - TF_WORKSPACE: preview
    shell: secrethub run -- /bin/sh -eo pipefail
    steps:
    - checkout
    - setup_remote_docker
    - run:
        name: generate environmental configuration and credentials from templates
        command: |
          secrethub inject -i tpl/terraformrc.tpl -o ~/.terraformrc
          secrethub inject -i tpl/preview.auto.tfvars.json.tpl -o preview.auto.tfvars.json
    - run:
        command: 'terraform init '
        name: terraform init
        working_directory: .
    - run:
        command: terraform destroy  --auto-approve
        name: terraform destroy
        working_directory: .
workflows:
  version: 2
  lab-platform-rds-pipeline:
    jobs:
    - sandbox-change-plan:
        context: twdps-di
    - approve-sandbox-changes:
        filters:
          branches:
            only: /master/
          tags:
            ignore: /.*/
        type: approval
        requires:
        - sandbox-change-plan
    - sandbox-change-apply:
        filters:
          branches:
            only: /master/
          tags:
            ignore: /.*/
        requires:
        - approve-sandbox-changes
        context: twdps-di
    - preview-change-plan:
        filters:
          branches:
            ignore: /.*/
          tags:
            only: /.*/
        context: twdps-di
    - approve-preview-changes:
        filters:
          branches:
            ignore: /.*/
          tags:
            only: /.*/
        type: approval
        requires:
        - preview-change-plan
    - preview-change-apply:
        filters:
          branches:
            ignore: /.*/
          tags:
            only: /.*/
        requires:
        - approve-preview-changes
        context: twdps-di
    - tear-down-lab-rds:
        filters:
          branches:
            only: /master/
          tags:
            ignore: /.*/
        type: approval
    - approve-teardown-rds:
        filters:
          branches:
            only: /master/
          tags:
            ignore: /.*/
        type: approval
        requires:
        - tear-down-lab-rds
    - sandbox lab rds teardown:
        filters:
          branches:
            only: /master/
          tags:
            ignore: /.*/
        requires:
        - approve-teardown-rds
        context: twdps-di
    - preview lab rds teardown:
        filters:
          branches:
            only: /master/
          tags:
            ignore: /.*/
        requires:
        - approve-teardown-rds
        context: twdps-di

# Original config.yml file:
# ---
# version: 2.1
# 
# orbs:
#   terraform: feedyard/terraform@0.3.0
# 
# # git push: plan, release, test sandbox
# on-push-master: &on-push-master
#   branches:
#     only: /master/
#   tags:
#     ignore: /.*/
# 
# # git tag: plan, release, test continuous to production
# on-tag-master: &on-tag-master
#   branches:
#     ignore: /.*/
#   tags:
#     only: /.*/
# 
# # commands:
# #   cluster-base-configure:
# #     parameters:
# #       cluster:
# #         description: cluster name to use for configuration
# #         type: string
# #         default: \"\"
# #     steps:
# #       - run:
# #           name: cis benchmarks
# #           command: bash tpl/kube_bench.sh
# 
# workflows:
#   version: 2
#   lab-platform-rds-pipeline:
# 
#     jobs:
#       - terraform/plan:
#           name: sandbox-change-plan
#           context: twdps-di
#           shell: secrethub run -- /bin/sh -eo pipefail
#           workspace: sandbox
#           before-terraform:
#             - run:
#                 name: generate environmental configuration and credentials from templates
#                 command: |
#                   secrethub inject -i tpl/terraformrc.tpl -o ~/.terraformrc
#                   secrethub inject -i tpl/sandbox.auto.tfvars.json.tpl -o sandbox.auto.tfvars.json
#           # filters: *on-push-master
# 
#       - approve-sandbox-changes:
#           type: approval
#           requires:
#             - sandbox-change-plan
#           filters: *on-push-master
# 
#       - terraform/apply:
#           name: sandbox-change-apply
#           context: twdps-di
#           shell: secrethub run -- /bin/sh -eo pipefail
#           workspace: sandbox
#           before-terraform:
#             - run:
#                 name: generate environmental configuration and credentials from templates
#                 command: |
#                   secrethub inject -i tpl/terraformrc.tpl -o ~/.terraformrc
#                   secrethub inject -i tpl/sandbox.auto.tfvars.json.tpl -o sandbox.auto.tfvars.json
#           after-terraform:
#             - run:
#                 name: test sandbox account changes
#                 environment:
#                   TEST_ENV: sandbox
#                 command: |
#                   terraform output -raw psql_secret | secrethub write twdps/di/svc/aurora/psql/password
#                   terraform output -raw psql_master_username | secrethub write twdps/di/svc/aurora/psql/username
#                   terraform output -raw psql_endpoint | secrethub write twdps/di/svc/aurora/psql/endpoint
#             # - cluster-base-configure:
#             #     cluster: sandbox
#           requires:
#             - approve-sandbox-changes
#           filters: *on-push-master
#     
#       # git tag to release
#       - terraform/plan:
#           name: preview-change-plan
#           context: twdps-di
#           shell: secrethub run -- /bin/sh -eo pipefail
#           workspace: sandbox
#           before-terraform:
#             - run:
#                 name: generate environmental configuration and credentials from templates
#                 command: |
#                   secrethub inject -i tpl/terraformrc.tpl -o ~/.terraformrc
#                   secrethub inject -i tpl/preview.auto.tfvars.json.tpl -o preview.auto.tfvars.json
#           filters: *on-tag-master
# 
#       - approve-preview-changes:
#           type: approval
#           requires:
#             - preview-change-plan
#           filters: *on-tag-master
# 
#       - terraform/apply:
#           name: preview-change-apply
#           context: twdps-di
#           shell: secrethub run -- /bin/sh -eo pipefail
#           workspace: preview
#           before-terraform:
#             - run:
#                 name: generate environmental configuration and credentials from templates
#                 command: |
#                   secrethub inject -i tpl/terraformrc.tpl -o ~/.terraformrc
#                   secrethub inject -i tpl/preview.auto.tfvars.json.tpl -o preview.auto.tfvars.json
#           after-terraform:
#             - run:
#                 name: test preview account changes
#                 environment:
#                   TEST_ENV: preview
#                 command: |
#                   secrethub run -- bash tpl/cluster_test.sh preview
#                   secrethub run -- bash tpl/write_cluster_credentials.sh preview
#             # - cluster-base-configure:
#             #     cluster: preview
#           requires:
#             - approve-preview-changes
#           filters: *on-tag-master
#       
#       # repeat tag release sections for each desired environment
#       #
#       # typical DI pipeline is: sandbox > preview > nonprod > prod > management
# 
# 
#       - tear-down-lab-rds:
#           type: approval
#           filters: *on-push-master
# 
#       - approve-teardown-rds:
#           type: approval
#           requires:
#             - tear-down-lab-rds
#           filters: *on-push-master
# 
#       - terraform/destroy:
#           name: sandbox lab rds teardown
#           context: twdps-di
#           shell: secrethub run -- /bin/sh -eo pipefail
#           workspace: sandbox
#           before-terraform:
#             - run:
#                 name: generate environmental configuration and credentials from templates
#                 command: |
#                   secrethub inject -i tpl/terraformrc.tpl -o ~/.terraformrc
#                   secrethub inject -i tpl/sandbox.auto.tfvars.json.tpl -o sandbox.auto.tfvars.json
#           requires:
#             - approve-teardown-rds
#           filters: *on-push-master
# 
#       - terraform/destroy:
#           name: preview lab rds teardown
#           context: twdps-di
#           shell: secrethub run -- /bin/sh -eo pipefail
#           workspace: preview
#           before-terraform:
#             - run:
#                 name: generate environmental configuration and credentials from templates
#                 command: |
#                   secrethub inject -i tpl/terraformrc.tpl -o ~/.terraformrc
#                   secrethub inject -i tpl/preview.auto.tfvars.json.tpl -o preview.auto.tfvars.json
#           requires:
#             - approve-teardown-rds
#           filters: *on-push-master